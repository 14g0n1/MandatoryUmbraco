@inherits Umbraco.Web.Macros.PartialViewMacroPage
@using Umbraco.Web



<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<link rel="stylesheet" href="~/Content/bootstrap.css">
<link rel="stylesheet" href="~/Content/customStyling/CustomOverallStyles.css">

@*
    This snippet displays a list of links of the pages immediately under the top-most page in the content tree.
    This is the home page for a standard website.
    It also highlights the current active page/section in the navigation with the CSS class "current".
*@

@{ var selection = Model.Content.Site().Children.Where(x => x.IsVisible()).ToArray(); }

@if (selection.Length > 0)
{
<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav mr-auto">
            <li>
                <img class="headerLogo inlin" src="@Umbraco.TypedMedia(Model.Content.Site().GetPropertyValue<int>("logo")).Url" alt="" /></li>
   
            
            @if (Model.Content.Site().Name == CurrentPage.Name)
            {
                <li class="nav-item active">
                    <a class="nav-link" href="@Model.Content.Site().Url">@Model.Content.Site().Name</a>
                </li>
            }
            else
            {
                <li class="nav-item">
                    <a class="nav-link" href="@Model.Content.Site().Url">@Model.Content.Site().Name</a>
                </li>
            }
    @foreach (var item in selection)
    {
        <!--Check if the element is protected from this role-->
        var isProtected = umbraco.library.IsProtected(item.Id, item.Path);
        var loginAccess = umbraco.library.IsProtected(item.Id, item.Path)
            && umbraco.library.HasAccess(item.Id, item.Path);

        if (!isProtected || loginAccess)
        {
            if (item.Name.ToLower() != "projects")
            {
                if (item.Name == CurrentPage.Name)
                {
                    <li class="nav-item active">
                        <a class="nav-link" href="@item.Url">@item.Name</a>
                    </li>
                }
                else
                {
                    <li class="nav-item">
                        <a class="nav-link" href="@item.Url">@item.Name</a>
                    </li>
                }
            }
            else
            {
                <li class="nav-item">
                    <div class="dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            @item.Name
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="dropdownMenu">
                            <li class="dropdown-item">
                                <a href="@item.Url">
                                    All projects
                                </a>
                            </li>
                           @{ 
                               var memberService = ApplicationContext.Current.Services.MemberService;
                               var childResults = item.Children;
                               /*
                              Test if the currentUser is a member of the guest group if he is; only projects with a status that is not 'Idea' will be shown
                              If the user identity is not set only 'completed' will be set
                              If the user is logged in and is not a part of the guest user group we assume he is part of Active group which allows him to se all projects
                              */
                               if (Members.GetCurrentLoginStatus().IsLoggedIn)
                               {

                                   if ((memberService.GetMembersByGroup("Guests").FirstOrDefault(m => m.Name == Members.GetCurrentMember().Name)) != null
                                        && (memberService.GetMembersByGroup("Active Members").FirstOrDefault(m => m.Name == Members.GetCurrentMember().Name)) == null)
                                       {
                                           childResults = item.Children.Where(c => umbraco.library
                                           .GetPreValueAsString(c.GetPropertyValue<int>("projectStatus")) != "Idea");
                                       }
                               }
                               else
                               {
                                   childResults = item.Children.Where(c => umbraco.library
                                   .GetPreValueAsString(c.GetPropertyValue<int>("projectStatus")) == "Completed");
                               }
                           }
                                    @foreach (var child in childResults)
                                    {
                                        <li class="dropdown-item">
                                            <a href="@child.Url">
                                                @child.Name
                                            </a>
                                        </li>
                                    }
                        </ul>
                    </div>
                </li>
            }
        }
    }
</ul>
    </div>
</nav>
}





